{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\ml-project-website\\\\frontend\\\\src\\\\pages\\\\Placement.jsx\",\n  _s = $RefreshSig$();\n// src/pages/Placement.jsx\nimport React, { useState } from 'react';\nimport './Placement.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Placement() {\n  _s();\n  const [cgpa, setCgpa] = useState('');\n  const [iq, setIq] = useState('');\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handlePrediction = async () => {\n    setLoading(true);\n    setResult(null);\n\n    // Send POST request to Flask API with CGPA and IQ\n    try {\n      const response = await fetch('http://127.0.0.1:5000/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cgpa: cgpa,\n          iq: iq\n        })\n      });\n      const data = await response.json();\n      setResult(data.prediction);\n    } catch (error) {\n      console.error('Error fetching prediction:', error);\n      setResult('Error: Unable to fetch prediction');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"placement-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"Placement Predictor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"description\",\n      children: \"Enter your CGPA and IQ to predict whether you will be placed or not.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter CGPA\",\n        className: \"input-field\",\n        value: cgpa,\n        onChange: e => setCgpa(e.target.value),\n        min: \"0\",\n        max: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter IQ\",\n        className: \"input-field\",\n        value: iq,\n        onChange: e => setIq(e.target.value),\n        min: \"0\",\n        max: \"200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `predict-btn ${loading ? 'loading' : ''}`,\n        onClick: handlePrediction,\n        disabled: loading,\n        children: loading ? 'Predicting...' : 'Predict'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `result ${result === 'Placed' ? 'success' : 'failure'}`,\n      children: result === 'Placed' ? 'üéâ You will be placed!' : '‚ùå You will not be placed.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Placement, \"u5OjqvQIBkr/pc2zVBrecIuaI5U=\");\n_c = Placement;\nvar _c;\n$RefreshReg$(_c, \"Placement\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Placement","_s","cgpa","setCgpa","iq","setIq","result","setResult","loading","setLoading","handlePrediction","response","fetch","method","headers","body","JSON","stringify","data","json","prediction","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","min","max","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/user/ml-project-website/frontend/src/pages/Placement.jsx"],"sourcesContent":["// src/pages/Placement.jsx\r\nimport React, { useState } from 'react';\r\nimport './Placement.css';\r\n\r\nexport default function Placement() {\r\n  const [cgpa, setCgpa] = useState('');\r\n  const [iq, setIq] = useState('');\r\n  const [result, setResult] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handlePrediction = async () => {\r\n    setLoading(true);\r\n    setResult(null);\r\n\r\n    // Send POST request to Flask API with CGPA and IQ\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:5000/predict', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          cgpa: cgpa,\r\n          iq: iq,\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n      setResult(data.prediction);\r\n    } catch (error) {\r\n      console.error('Error fetching prediction:', error);\r\n      setResult('Error: Unable to fetch prediction');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"placement-container\">\r\n      <h2 className=\"title\">Placement Predictor</h2>\r\n      <p className=\"description\">Enter your CGPA and IQ to predict whether you will be placed or not.</p>\r\n\r\n      <div className=\"input-form\">\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Enter CGPA\"\r\n          className=\"input-field\"\r\n          value={cgpa}\r\n          onChange={(e) => setCgpa(e.target.value)}\r\n          min=\"0\" max=\"10\"\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Enter IQ\"\r\n          className=\"input-field\"\r\n          value={iq}\r\n          onChange={(e) => setIq(e.target.value)}\r\n          min=\"0\" max=\"200\"\r\n        />\r\n\r\n        <button \r\n          className={`predict-btn ${loading ? 'loading' : ''}`}\r\n          onClick={handlePrediction}\r\n          disabled={loading}\r\n        >\r\n          {loading ? 'Predicting...' : 'Predict'}\r\n        </button>\r\n      </div>\r\n\r\n      {result && (\r\n  <div className={`result ${result === 'Placed' ? 'success' : 'failure'}`}>\r\n    {result === 'Placed' ? 'üéâ You will be placed!' : '‚ùå You will not be placed.'}\r\n  </div>\r\n)}\r\n\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}